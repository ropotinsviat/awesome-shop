generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum PaymentStatus {
  COMPLETE
  FAILED
  PENDING
}

enum DeliveryStatus {
  PENDING
  IN_TRANSIT
  DELIVERED
}

model User {
  id         String  @id @default(uuid())
  email      String  @unique
  name       String
  phone      String
  address    String
  password   String
  isVerified Boolean @default(false)
  role       Role    @default(USER)
  pinCode    String?
  orders     Order[]
}

model Product {
  id           String        @id @default(uuid())
  name         String
  description  String
  price        Float
  category     String
  quantity     Int
  orderDetails OrderDetail[]
}

model Order {
  id             String         @id @default(uuid())
  userId         String
  totalAmount    Float
  paymentStatus  PaymentStatus  @default(PENDING)
  deliveryStatus DeliveryStatus @default(PENDING)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt

  user         User          @relation(fields: [userId], references: [id])
  orderDetails OrderDetail[]
  Payment      Payment[]
}

model OrderDetail {
  id              String @id @default(uuid())
  orderId         String
  productId       String
  quantity        Int
  priceAtPurchase Float

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}

model Payment {
  id            String        @id @default(uuid())
  orderId       String
  totalAmount   Float
  paymentStatus PaymentStatus @default(PENDING)
  transactionId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  order Order @relation(fields: [orderId], references: [id])
}
